

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jan 29 16:35:18 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.10
    23                           ; Generated 31/07/2019 GMT
    24                           ; 
    25                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0006                     _PORTB	set	6
   213  0005                     _PORTA	set	5
   214  0007                     _PORTC	set	7
   215  0008                     _PORTDbits	set	8
   216  0088                     _TRISD	set	136
   217  0087                     _TRISC	set	135
   218  0086                     _TRISB	set	134
   219  0085                     _TRISA	set	133
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           ; #config settings
   224  0000                     
   225                           	psect	cinit
   226  07F6                     start_initialization:	
   227  07F6                     __initialization:	
   228                           
   229                           ; Clear objects allocated to COMMON
   230  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   231  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   232  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   233  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   234  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   235  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   236  07FC                     end_of_initialization:	
   237                           ;End of C runtime variable initialization code
   238                           
   239  07FC                     __end_of__initialization:	
   240  07FC  0183               	clrf	3
   241  07FD  120A  118A  2E39   	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMMON
   244  0070                     __pbssCOMMON:	
   245  0070                     _jg:	
   246  0070                     	ds	2
   247  0072                     _n:	
   248  0072                     	ds	2
   249  0074                     _racer2:	
   250  0074                     	ds	1
   251  0075                     _racer1:	
   252  0075                     	ds	1
   253                           
   254                           	psect	cstackCOMMON
   255  0076                     __pcstackCOMMON:	
   256  0076                     ?_set:	
   257  0076                     ??_set:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0076                     ?_db:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0076                     ?_delay_ms:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0076                     ?_db2:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0076                     ??_db2:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0076                     ?_mario:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0076                     ?_MR:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0076                     ?_MV:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0076                     ?_winner1:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0076                     ??_winner1:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0076                     ?_MVS:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0076                     ??_MVS:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0076                     ?_winner2:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0076                     ??_winner2:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0076                     ?_MRS:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0076                     ??_MRS:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0076                     ?_main:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0076                     ?_carrera:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0076                     delay_ms@dms:	
   312                           ; 1 bytes @ 0x0
   313                           
   314                           
   315                           ; 2 bytes @ 0x0
   316  0076                     	ds	2
   317  0078                     ??_delay_ms:	
   318  0078                     ??_MR:	
   319                           ; 1 bytes @ 0x2
   320                           
   321  0078                     ??_MV:	
   322                           ; 1 bytes @ 0x2
   323                           
   324  0078                     delay_ms@i:	
   325                           ; 1 bytes @ 0x2
   326                           
   327                           
   328                           ; 2 bytes @ 0x2
   329  0078                     	ds	2
   330  007A                     ??_mario:	
   331  007A                     delay_ms@j:	
   332                           ; 1 bytes @ 0x4
   333                           
   334                           
   335                           ; 2 bytes @ 0x4
   336  007A                     	ds	2
   337  007C                     ??_db:	
   338  007C                     ??_main:	
   339                           ; 1 bytes @ 0x6
   340                           
   341  007C                     ??_carrera:	
   342                           ; 1 bytes @ 0x6
   343                           
   344                           
   345                           	psect	maintext
   346  0639                     __pmaintext:	
   347                           ; 1 bytes @ 0x6
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 43 in file "lab1.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : B00/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0
   370 ;;      Totals:         0       0       0       0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels required when called:    5
   373 ;; This function calls:
   374 ;;		_db
   375 ;;		_set
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           
   382                           ;psect for function _main
   383  0639                     _main:	
   384  0639                     l988:	
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   387                           
   388                           
   389                           ;lab1.c: 44:     set();
   390  0639  120A  118A  2647  120A  118A  	fcall	_set
   391  063E                     l990:	
   392                           
   393                           ;lab1.c: 46:     db();
   394  063E  120A  118A  2691  120A  118A  	fcall	_db
   395                           
   396                           ;lab1.c: 47:     goto AQUI;
   397  0643  2E3E               	goto	l990
   398  0644  120A  118A  2800   	ljmp	start
   399  0647                     __end_of_main:	
   400                           
   401                           	psect	text1
   402  0647                     __ptext1:	
   403 ;; *************** function _set *****************
   404 ;; Defined at:
   405 ;;		line 108 in file "lab1.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0
   422 ;;      Totals:         0       0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels used:    1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _set
   434  0647                     _set:	
   435  0647                     l898:	
   436                           ;incstack = 0
   437                           ; Regs used in _set: [wreg+status,2]
   438                           
   439                           
   440                           ;lab1.c: 109:     ANSEL = 0;
   441  0647  1683               	bsf	3,5	;RP0=1, select bank3
   442  0648  1703               	bsf	3,6	;RP1=1, select bank3
   443  0649  0188               	clrf	8	;volatile
   444                           
   445                           ;lab1.c: 110:     ANSELH = 0;
   446  064A  0189               	clrf	9	;volatile
   447                           
   448                           ;lab1.c: 111:     TRISA = 0x00;
   449  064B  1683               	bsf	3,5	;RP0=1, select bank1
   450  064C  1303               	bcf	3,6	;RP1=0, select bank1
   451  064D  0185               	clrf	5	;volatile
   452                           
   453                           ;lab1.c: 112:     TRISB = 0x00;
   454  064E  0186               	clrf	6	;volatile
   455                           
   456                           ;lab1.c: 113:     TRISC = 0x00;
   457  064F  0187               	clrf	7	;volatile
   458  0650                     l900:	
   459                           
   460                           ;lab1.c: 114:     TRISD = 0xE0;
   461  0650  30E0               	movlw	224
   462  0651  0088               	movwf	8	;volatile
   463  0652                     l902:	
   464                           
   465                           ;lab1.c: 115:     PORTA = 0x00;
   466  0652  1283               	bcf	3,5	;RP0=0, select bank0
   467  0653  1303               	bcf	3,6	;RP1=0, select bank0
   468  0654  0185               	clrf	5	;volatile
   469  0655                     l904:	
   470                           
   471                           ;lab1.c: 116:     PORTB = 0x00;
   472  0655  0186               	clrf	6	;volatile
   473  0656                     l906:	
   474                           
   475                           ;lab1.c: 117:     PORTC = 0x00;
   476  0656  0187               	clrf	7	;volatile
   477  0657                     l908:	
   478                           
   479                           ;lab1.c: 118:     n = 0x00;
   480  0657  01F2               	clrf	_n
   481  0658  01F3               	clrf	_n+1
   482  0659                     l86:	
   483  0659  0008               	return
   484  065A                     __end_of_set:	
   485                           
   486                           	psect	text2
   487  0691                     __ptext2:	
   488 ;; *************** function _db *****************
   489 ;; Defined at:
   490 ;;		line 82 in file "lab1.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used:    1
   510 ;; Hardware stack levels required when called:    4
   511 ;; This function calls:
   512 ;;		_carrera
   513 ;;		_db2
   514 ;;		_mario
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _db
   522  0691                     _db:	
   523  0691                     l974:	
   524                           ;incstack = 0
   525                           ; Regs used in _db: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   526                           
   527                           
   528                           ;lab1.c: 83:     while (n == 0){
   529  0691  2E9F               	goto	l980
   530  0692                     l71:	
   531                           
   532                           ;lab1.c: 84:         if (PORTDbits.RD7 == 1){
   533  0692  1283               	bcf	3,5	;RP0=0, select bank0
   534  0693  1303               	bcf	3,6	;RP1=0, select bank0
   535  0694  1F88               	btfss	8,7	;volatile
   536  0695  2E97               	goto	u341
   537  0696  2E98               	goto	u340
   538  0697                     u341:	
   539  0697  2E9B               	goto	l978
   540  0698                     u340:	
   541  0698                     l976:	
   542                           
   543                           ;lab1.c: 85:             n = 0;
   544  0698  01F2               	clrf	_n
   545  0699  01F3               	clrf	_n+1
   546                           
   547                           ;lab1.c: 86:         }
   548  069A  2E9F               	goto	l980
   549  069B                     l978:	
   550                           
   551                           ;lab1.c: 88:             n = 1;
   552  069B  3001               	movlw	1
   553  069C  00F2               	movwf	_n
   554  069D  3000               	movlw	0
   555  069E  00F3               	movwf	_n+1
   556  069F                     l980:	
   557                           
   558                           ;lab1.c: 83:     while (n == 0){
   559  069F  0872               	movf	_n,w
   560  06A0  0473               	iorwf	_n+1,w
   561  06A1  1903               	btfsc	3,2
   562  06A2  2EA4               	goto	u351
   563  06A3  2EA5               	goto	u350
   564  06A4                     u351:	
   565  06A4  2E92               	goto	l71
   566  06A5                     u350:	
   567  06A5                     l982:	
   568                           
   569                           ;lab1.c: 91:     db2();
   570  06A5  120A  118A  265A  120A  118A  	fcall	_db2
   571  06AA                     l984:	
   572                           
   573                           ;lab1.c: 92:     carrera();
   574  06AA  120A  118A  2744  120A  118A  	fcall	_carrera
   575  06AF                     l986:	
   576                           
   577                           ;lab1.c: 93:     mario();
   578  06AF  120A  118A  2673  120A  118A  	fcall	_mario
   579  06B4                     l75:	
   580  06B4  0008               	return
   581  06B5                     __end_of_db:	
   582                           
   583                           	psect	text3
   584  0673                     __ptext3:	
   585 ;; *************** function _mario *****************
   586 ;; Defined at:
   587 ;;		line 121 in file "lab1.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		_MR
   610 ;;		_MV
   611 ;; This function is called by:
   612 ;;		_db
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _mario
   618  0673                     _mario:	
   619  0673                     l890:	
   620                           ;incstack = 0
   621                           ; Regs used in _mario: [wreg+status,2+status,0+pclath+cstack]
   622                           
   623                           
   624                           ;lab1.c: 122:     while (jg == 1){
   625  0673  2E8A               	goto	l896
   626  0674                     l90:	
   627                           
   628                           ;lab1.c: 123:         if (PORTDbits.RD6 == 0){
   629  0674  1283               	bcf	3,5	;RP0=0, select bank0
   630  0675  1303               	bcf	3,6	;RP1=0, select bank0
   631  0676  1B08               	btfsc	8,6	;volatile
   632  0677  2E79               	goto	u271
   633  0678  2E7A               	goto	u270
   634  0679                     u271:	
   635  0679  2E80               	goto	l91
   636  067A                     u270:	
   637  067A                     l892:	
   638                           
   639                           ;lab1.c: 124:             MR();
   640  067A  120A  118A  277C  120A  118A  	fcall	_MR
   641                           
   642                           ;lab1.c: 125:         }
   643  067F  2E8A               	goto	l896
   644  0680                     l91:	
   645                           ;lab1.c: 126:         else if (PORTDbits.RD5 == 0){
   646                           
   647  0680  1A88               	btfsc	8,5	;volatile
   648  0681  2E83               	goto	u281
   649  0682  2E84               	goto	u280
   650  0683                     u281:	
   651  0683  2E90               	goto	l95
   652  0684                     u280:	
   653  0684                     l894:	
   654                           
   655                           ;lab1.c: 127:             MV();
   656  0684  120A  118A  27B9  120A  118A  	fcall	_MV
   657                           
   658                           ;lab1.c: 128:         }
   659  0689  2E73               	goto	l890
   660  068A                     l896:	
   661                           
   662                           ;lab1.c: 122:     while (jg == 1){
   663  068A  0370               	decf	_jg,w
   664  068B  0471               	iorwf	_jg+1,w
   665  068C  1903               	btfsc	3,2
   666  068D  2E8F               	goto	u291
   667  068E  2E90               	goto	u290
   668  068F                     u291:	
   669  068F  2E74               	goto	l90
   670  0690                     u290:	
   671  0690                     l95:	
   672  0690  0008               	return
   673  0691                     __end_of_mario:	
   674                           
   675                           	psect	text4
   676  07B9                     __ptext4:	
   677 ;; *************** function _MV *****************
   678 ;; Defined at:
   679 ;;		line 159 in file "lab1.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0, pclath, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   693 ;;      Params:         0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0
   695 ;;      Temps:          2       0       0       0       0
   696 ;;      Totals:         2       0       0       0       0
   697 ;;Total ram usage:        2 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; Hardware stack levels required when called:    2
   700 ;; This function calls:
   701 ;;		_MRS
   702 ;;		_winner2
   703 ;; This function is called by:
   704 ;;		_mario
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _MV
   710  07B9                     _MV:	
   711  07B9                     l828:	
   712                           ;incstack = 0
   713                           ; Regs used in _MV: [wreg+status,2+status,0+pclath+cstack]
   714                           
   715                           
   716                           ;lab1.c: 160:     if (PORTDbits.RD5 == 1){
   717  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   718  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   719  07BB  1E88               	btfss	8,5	;volatile
   720  07BC  2FBE               	goto	u191
   721  07BD  2FBF               	goto	u190
   722  07BE                     u191:	
   723  07BE  2FEC               	goto	l112
   724  07BF                     u190:	
   725  07BF                     l830:	
   726                           
   727                           ;lab1.c: 161:         if (racer2 == 0){
   728  07BF  0874               	movf	_racer2,w
   729  07C0  1D03               	btfss	3,2
   730  07C1  2FC3               	goto	u201
   731  07C2  2FC4               	goto	u200
   732  07C3                     u201:	
   733  07C3  2FCB               	goto	l836
   734  07C4                     u200:	
   735  07C4                     l832:	
   736                           
   737                           ;lab1.c: 162:             racer2 = 1;
   738  07C4  01F4               	clrf	_racer2
   739  07C5  0AF4               	incf	_racer2,f
   740  07C6                     l834:	
   741                           
   742                           ;lab1.c: 163:             racer2 = PORTB;
   743  07C6  0806               	movf	6,w	;volatile
   744  07C7  00F8               	movwf	??_MV
   745  07C8  0878               	movf	??_MV,w
   746  07C9  00F4               	movwf	_racer2
   747                           
   748                           ;lab1.c: 164:         }
   749  07CA  2FF5               	goto	l122
   750  07CB                     l836:	
   751  07CB  0874               	movf	_racer2,w
   752  07CC  1903               	btfsc	3,2
   753  07CD  2FCF               	goto	u211
   754  07CE  2FD0               	goto	u210
   755  07CF                     u211:	
   756  07CF  2FDF               	goto	l844
   757  07D0                     u210:	
   758  07D0                     l838:	
   759  07D0  3080               	movlw	128
   760  07D1  0274               	subwf	_racer2,w
   761  07D2  1803               	skipnc
   762  07D3  2FD5               	goto	u221
   763  07D4  2FD6               	goto	u220
   764  07D5                     u221:	
   765  07D5  2FDF               	goto	l844
   766  07D6                     u220:	
   767  07D6                     l840:	
   768                           
   769                           ;lab1.c: 166:             racer2 = racer2 * 2;
   770  07D6  0874               	movf	_racer2,w
   771  07D7  00F8               	movwf	??_MV
   772  07D8  0778               	addwf	??_MV,w
   773  07D9  00F9               	movwf	??_MV+1
   774  07DA  0879               	movf	??_MV+1,w
   775  07DB  00F4               	movwf	_racer2
   776  07DC                     l842:	
   777                           
   778                           ;lab1.c: 167:             PORTB = racer2;
   779  07DC  0874               	movf	_racer2,w
   780  07DD  0086               	movwf	6	;volatile
   781                           
   782                           ;lab1.c: 168:         }
   783  07DE  2FF5               	goto	l122
   784  07DF                     l844:	
   785  07DF  3080               	movlw	128
   786  07E0  0674               	xorwf	_racer2,w
   787  07E1  1D03               	btfss	3,2
   788  07E2  2FE4               	goto	u231
   789  07E3  2FE5               	goto	u230
   790  07E4                     u231:	
   791  07E4  2FEB               	goto	l114
   792  07E5                     u230:	
   793  07E5                     l846:	
   794                           
   795                           ;lab1.c: 170:             winner2();
   796  07E5  120A  118A  2627  120A  118A  	fcall	_winner2
   797                           
   798                           ;lab1.c: 171:         }
   799  07EA  2FF5               	goto	l122
   800  07EB                     l114:	
   801                           
   802                           ;lab1.c: 174:     }
   803  07EB  2FF5               	goto	l122
   804  07EC                     l112:	
   805                           ;lab1.c: 175:     else if (PORTDbits.RD6 == 0){
   806                           
   807  07EC  1B08               	btfsc	8,6	;volatile
   808  07ED  2FEF               	goto	u241
   809  07EE  2FF0               	goto	u240
   810  07EF                     u241:	
   811  07EF  2FF5               	goto	l122
   812  07F0                     u240:	
   813  07F0                     l848:	
   814                           
   815                           ;lab1.c: 176:         MRS();
   816  07F0  120A  118A  2711  120A  118A  	fcall	_MRS
   817  07F5                     l122:	
   818                           ;lab1.c: 177:     }
   819                           
   820  07F5  0008               	return
   821  07F6                     __end_of_MV:	
   822                           
   823                           	psect	text5
   824  0711                     __ptext5:	
   825 ;; *************** function _MRS *****************
   826 ;; Defined at:
   827 ;;		line 200 in file "lab1.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0
   843 ;;      Temps:          2       0       0       0       0
   844 ;;      Totals:         2       0       0       0       0
   845 ;;Total ram usage:        2 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    1
   848 ;; This function calls:
   849 ;;		_winner1
   850 ;; This function is called by:
   851 ;;		_MV
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _MRS
   857  0711                     _MRS:	
   858  0711                     l772:	
   859                           ;incstack = 0
   860                           ; Regs used in _MRS: [wreg+status,2+status,0+pclath+cstack]
   861                           
   862                           
   863                           ;lab1.c: 201:     if (PORTDbits.RD6 == 1){
   864  0711  1283               	bcf	3,5	;RP0=0, select bank0
   865  0712  1303               	bcf	3,6	;RP1=0, select bank0
   866  0713  1F08               	btfss	8,6	;volatile
   867  0714  2F16               	goto	u61
   868  0715  2F17               	goto	u60
   869  0716                     u61:	
   870  0716  2F43               	goto	l142
   871  0717                     u60:	
   872  0717                     l774:	
   873                           
   874                           ;lab1.c: 202:         if (racer1 == 0){
   875  0717  0875               	movf	_racer1,w
   876  0718  1D03               	btfss	3,2
   877  0719  2F1B               	goto	u71
   878  071A  2F1C               	goto	u70
   879  071B                     u71:	
   880  071B  2F23               	goto	l780
   881  071C                     u70:	
   882  071C                     l776:	
   883                           
   884                           ;lab1.c: 203:             racer1 = 1;
   885  071C  01F5               	clrf	_racer1
   886  071D  0AF5               	incf	_racer1,f
   887  071E                     l778:	
   888                           
   889                           ;lab1.c: 204:             racer1 = PORTA;
   890  071E  0805               	movf	5,w	;volatile
   891  071F  00F6               	movwf	??_MRS
   892  0720  0876               	movf	??_MRS,w
   893  0721  00F5               	movwf	_racer1
   894                           
   895                           ;lab1.c: 205:         }
   896  0722  2F43               	goto	l142
   897  0723                     l780:	
   898  0723  0875               	movf	_racer1,w
   899  0724  1903               	btfsc	3,2
   900  0725  2F27               	goto	u81
   901  0726  2F28               	goto	u80
   902  0727                     u81:	
   903  0727  2F37               	goto	l788
   904  0728                     u80:	
   905  0728                     l782:	
   906  0728  3080               	movlw	128
   907  0729  0275               	subwf	_racer1,w
   908  072A  1803               	skipnc
   909  072B  2F2D               	goto	u91
   910  072C  2F2E               	goto	u90
   911  072D                     u91:	
   912  072D  2F37               	goto	l788
   913  072E                     u90:	
   914  072E                     l784:	
   915                           
   916                           ;lab1.c: 207:             racer1 = racer1 * 2;
   917  072E  0875               	movf	_racer1,w
   918  072F  00F6               	movwf	??_MRS
   919  0730  0776               	addwf	??_MRS,w
   920  0731  00F7               	movwf	??_MRS+1
   921  0732  0877               	movf	??_MRS+1,w
   922  0733  00F5               	movwf	_racer1
   923  0734                     l786:	
   924                           
   925                           ;lab1.c: 208:             PORTA = racer1;
   926  0734  0875               	movf	_racer1,w
   927  0735  0085               	movwf	5	;volatile
   928                           
   929                           ;lab1.c: 209:         }
   930  0736  2F43               	goto	l142
   931  0737                     l788:	
   932  0737  3080               	movlw	128
   933  0738  0675               	xorwf	_racer1,w
   934  0739  1D03               	btfss	3,2
   935  073A  2F3C               	goto	u101
   936  073B  2F3D               	goto	u100
   937  073C                     u101:	
   938  073C  2F43               	goto	l137
   939  073D                     u100:	
   940  073D                     l790:	
   941                           
   942                           ;lab1.c: 211:             winner1();
   943  073D  120A  118A  2630  120A  118A  	fcall	_winner1
   944                           
   945                           ;lab1.c: 212:         }
   946  0742  2F43               	goto	l142
   947  0743                     l137:	
   948  0743                     l142:	
   949  0743  0008               	return
   950  0744                     __end_of_MRS:	
   951                           
   952                           	psect	text6
   953  077C                     __ptext6:	
   954 ;; *************** function _MR *****************
   955 ;; Defined at:
   956 ;;		line 135 in file "lab1.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, pclath, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0
   972 ;;      Temps:          2       0       0       0       0
   973 ;;      Totals:         2       0       0       0       0
   974 ;;Total ram usage:        2 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    2
   977 ;; This function calls:
   978 ;;		_MVS
   979 ;;		_winner1
   980 ;; This function is called by:
   981 ;;		_mario
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           
   986                           ;psect for function _MR
   987  077C                     _MR:	
   988  077C                     l806:	
   989                           ;incstack = 0
   990                           ; Regs used in _MR: [wreg+status,2+status,0+pclath+cstack]
   991                           
   992                           
   993                           ;lab1.c: 136:     if (PORTDbits.RD6 == 1){
   994  077C  1283               	bcf	3,5	;RP0=0, select bank0
   995  077D  1303               	bcf	3,6	;RP1=0, select bank0
   996  077E  1F08               	btfss	8,6	;volatile
   997  077F  2F81               	goto	u131
   998  0780  2F82               	goto	u130
   999  0781                     u131:	
  1000  0781  2FAF               	goto	l99
  1001  0782                     u130:	
  1002  0782                     l808:	
  1003                           
  1004                           ;lab1.c: 137:         if (racer1 == 0){
  1005  0782  0875               	movf	_racer1,w
  1006  0783  1D03               	btfss	3,2
  1007  0784  2F86               	goto	u141
  1008  0785  2F87               	goto	u140
  1009  0786                     u141:	
  1010  0786  2F8E               	goto	l814
  1011  0787                     u140:	
  1012  0787                     l810:	
  1013                           
  1014                           ;lab1.c: 138:             racer1 = 1;
  1015  0787  01F5               	clrf	_racer1
  1016  0788  0AF5               	incf	_racer1,f
  1017  0789                     l812:	
  1018                           
  1019                           ;lab1.c: 139:             racer1 = PORTA;
  1020  0789  0805               	movf	5,w	;volatile
  1021  078A  00F8               	movwf	??_MR
  1022  078B  0878               	movf	??_MR,w
  1023  078C  00F5               	movwf	_racer1
  1024                           
  1025                           ;lab1.c: 140:         }
  1026  078D  2FB8               	goto	l109
  1027  078E                     l814:	
  1028  078E  0875               	movf	_racer1,w
  1029  078F  1903               	btfsc	3,2
  1030  0790  2F92               	goto	u151
  1031  0791  2F93               	goto	u150
  1032  0792                     u151:	
  1033  0792  2FA2               	goto	l822
  1034  0793                     u150:	
  1035  0793                     l816:	
  1036  0793  3080               	movlw	128
  1037  0794  0275               	subwf	_racer1,w
  1038  0795  1803               	skipnc
  1039  0796  2F98               	goto	u161
  1040  0797  2F99               	goto	u160
  1041  0798                     u161:	
  1042  0798  2FA2               	goto	l822
  1043  0799                     u160:	
  1044  0799                     l818:	
  1045                           
  1046                           ;lab1.c: 142:             racer1 = racer1 * 2;
  1047  0799  0875               	movf	_racer1,w
  1048  079A  00F8               	movwf	??_MR
  1049  079B  0778               	addwf	??_MR,w
  1050  079C  00F9               	movwf	??_MR+1
  1051  079D  0879               	movf	??_MR+1,w
  1052  079E  00F5               	movwf	_racer1
  1053  079F                     l820:	
  1054                           
  1055                           ;lab1.c: 143:             PORTA = racer1;
  1056  079F  0875               	movf	_racer1,w
  1057  07A0  0085               	movwf	5	;volatile
  1058                           
  1059                           ;lab1.c: 144:         }
  1060  07A1  2FB8               	goto	l109
  1061  07A2                     l822:	
  1062  07A2  3080               	movlw	128
  1063  07A3  0675               	xorwf	_racer1,w
  1064  07A4  1D03               	btfss	3,2
  1065  07A5  2FA7               	goto	u171
  1066  07A6  2FA8               	goto	u170
  1067  07A7                     u171:	
  1068  07A7  2FAE               	goto	l101
  1069  07A8                     u170:	
  1070  07A8                     l824:	
  1071                           
  1072                           ;lab1.c: 146:             winner1();
  1073  07A8  120A  118A  2630  120A  118A  	fcall	_winner1
  1074                           
  1075                           ;lab1.c: 147:         }
  1076  07AD  2FB8               	goto	l109
  1077  07AE                     l101:	
  1078                           
  1079                           ;lab1.c: 150:     }
  1080  07AE  2FB8               	goto	l109
  1081  07AF                     l99:	
  1082                           ;lab1.c: 151:     else if (PORTDbits.RD5 == 0){
  1083                           
  1084  07AF  1A88               	btfsc	8,5	;volatile
  1085  07B0  2FB2               	goto	u181
  1086  07B1  2FB3               	goto	u180
  1087  07B2                     u181:	
  1088  07B2  2FB8               	goto	l109
  1089  07B3                     u180:	
  1090  07B3                     l826:	
  1091                           
  1092                           ;lab1.c: 152:         MVS();
  1093  07B3  120A  118A  26DE  120A  118A  	fcall	_MVS
  1094  07B8                     l109:	
  1095                           ;lab1.c: 153:     }
  1096                           
  1097  07B8  0008               	return
  1098  07B9                     __end_of_MR:	
  1099                           
  1100                           	psect	text7
  1101  0630                     __ptext7:	
  1102 ;; *************** function _winner1 *****************
  1103 ;; Defined at:
  1104 ;;		line 218 in file "lab1.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0
  1121 ;;      Totals:         0       0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_MR
  1128 ;;		_MRS
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _winner1
  1134  0630                     _winner1:	
  1135  0630                     l740:	
  1136                           ;incstack = 0
  1137                           ; Regs used in _winner1: [wreg+status,2]
  1138                           
  1139                           
  1140                           ;lab1.c: 219:     PORTA = 0x00;
  1141  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0632  0185               	clrf	5	;volatile
  1144                           
  1145                           ;lab1.c: 220:     jg = 0;
  1146  0633  01F0               	clrf	_jg
  1147  0634  01F1               	clrf	_jg+1
  1148  0635                     l742:	
  1149                           
  1150                           ;lab1.c: 221:     PORTDbits.RD0 = 1;
  1151  0635  1408               	bsf	8,0	;volatile
  1152  0636                     l744:	
  1153                           
  1154                           ;lab1.c: 222:     PORTC = 0x04;
  1155  0636  3004               	movlw	4
  1156  0637  0087               	movwf	7	;volatile
  1157  0638                     l145:	
  1158  0638  0008               	return
  1159  0639                     __end_of_winner1:	
  1160                           
  1161                           	psect	text8
  1162  06DE                     __ptext8:	
  1163 ;; *************** function _MVS *****************
  1164 ;; Defined at:
  1165 ;;		line 182 in file "lab1.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0
  1181 ;;      Temps:          2       0       0       0       0
  1182 ;;      Totals:         2       0       0       0       0
  1183 ;;Total ram usage:        2 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    1
  1186 ;; This function calls:
  1187 ;;		_winner2
  1188 ;; This function is called by:
  1189 ;;		_MR
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _MVS
  1195  06DE                     _MVS:	
  1196  06DE                     l752:	
  1197                           ;incstack = 0
  1198                           ; Regs used in _MVS: [wreg+status,2+status,0+pclath+cstack]
  1199                           
  1200                           
  1201                           ;lab1.c: 183:     if (PORTDbits.RD5){
  1202  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1203  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1204  06E0  1E88               	btfss	8,5	;volatile
  1205  06E1  2EE3               	goto	u11
  1206  06E2  2EE4               	goto	u10
  1207  06E3                     u11:	
  1208  06E3  2F10               	goto	l132
  1209  06E4                     u10:	
  1210  06E4                     l754:	
  1211                           
  1212                           ;lab1.c: 184:         if (racer2 == 0){
  1213  06E4  0874               	movf	_racer2,w
  1214  06E5  1D03               	btfss	3,2
  1215  06E6  2EE8               	goto	u21
  1216  06E7  2EE9               	goto	u20
  1217  06E8                     u21:	
  1218  06E8  2EF0               	goto	l760
  1219  06E9                     u20:	
  1220  06E9                     l756:	
  1221                           
  1222                           ;lab1.c: 185:             racer2 = 1;
  1223  06E9  01F4               	clrf	_racer2
  1224  06EA  0AF4               	incf	_racer2,f
  1225  06EB                     l758:	
  1226                           
  1227                           ;lab1.c: 186:             racer2 = PORTB;
  1228  06EB  0806               	movf	6,w	;volatile
  1229  06EC  00F6               	movwf	??_MVS
  1230  06ED  0876               	movf	??_MVS,w
  1231  06EE  00F4               	movwf	_racer2
  1232                           
  1233                           ;lab1.c: 187:         }
  1234  06EF  2F10               	goto	l132
  1235  06F0                     l760:	
  1236  06F0  0874               	movf	_racer2,w
  1237  06F1  1903               	btfsc	3,2
  1238  06F2  2EF4               	goto	u31
  1239  06F3  2EF5               	goto	u30
  1240  06F4                     u31:	
  1241  06F4  2F04               	goto	l768
  1242  06F5                     u30:	
  1243  06F5                     l762:	
  1244  06F5  3080               	movlw	128
  1245  06F6  0274               	subwf	_racer2,w
  1246  06F7  1803               	skipnc
  1247  06F8  2EFA               	goto	u41
  1248  06F9  2EFB               	goto	u40
  1249  06FA                     u41:	
  1250  06FA  2F04               	goto	l768
  1251  06FB                     u40:	
  1252  06FB                     l764:	
  1253                           
  1254                           ;lab1.c: 189:             racer2 = racer2 * 2;
  1255  06FB  0874               	movf	_racer2,w
  1256  06FC  00F6               	movwf	??_MVS
  1257  06FD  0776               	addwf	??_MVS,w
  1258  06FE  00F7               	movwf	??_MVS+1
  1259  06FF  0877               	movf	??_MVS+1,w
  1260  0700  00F4               	movwf	_racer2
  1261  0701                     l766:	
  1262                           
  1263                           ;lab1.c: 190:             PORTB = racer2;
  1264  0701  0874               	movf	_racer2,w
  1265  0702  0086               	movwf	6	;volatile
  1266                           
  1267                           ;lab1.c: 191:         }
  1268  0703  2F10               	goto	l132
  1269  0704                     l768:	
  1270  0704  3080               	movlw	128
  1271  0705  0674               	xorwf	_racer2,w
  1272  0706  1D03               	btfss	3,2
  1273  0707  2F09               	goto	u51
  1274  0708  2F0A               	goto	u50
  1275  0709                     u51:	
  1276  0709  2F10               	goto	l127
  1277  070A                     u50:	
  1278  070A                     l770:	
  1279                           
  1280                           ;lab1.c: 193:             winner2();
  1281  070A  120A  118A  2627  120A  118A  	fcall	_winner2
  1282                           
  1283                           ;lab1.c: 194:         }
  1284  070F  2F10               	goto	l132
  1285  0710                     l127:	
  1286  0710                     l132:	
  1287  0710  0008               	return
  1288  0711                     __end_of_MVS:	
  1289                           
  1290                           	psect	text9
  1291  0627                     __ptext9:	
  1292 ;; *************** function _winner2 *****************
  1293 ;; Defined at:
  1294 ;;		line 225 in file "lab1.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_MV
  1318 ;;		_MVS
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _winner2
  1324  0627                     _winner2:	
  1325  0627                     l746:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _winner2: [wreg+status,2]
  1328                           
  1329                           
  1330                           ;lab1.c: 226:     PORTB = 0x00;
  1331  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0629  0186               	clrf	6	;volatile
  1334                           
  1335                           ;lab1.c: 227:     jg = 0;
  1336  062A  01F0               	clrf	_jg
  1337  062B  01F1               	clrf	_jg+1
  1338  062C                     l748:	
  1339                           
  1340                           ;lab1.c: 228:     PORTDbits.RD4 = 1;
  1341  062C  1608               	bsf	8,4	;volatile
  1342  062D                     l750:	
  1343                           
  1344                           ;lab1.c: 229:     PORTC = 0xB3;
  1345  062D  30B3               	movlw	179
  1346  062E  0087               	movwf	7	;volatile
  1347  062F                     l148:	
  1348  062F  0008               	return
  1349  0630                     __end_of_winner2:	
  1350                           
  1351                           	psect	text10
  1352  065A                     __ptext10:	
  1353 ;; *************** function _db2 *****************
  1354 ;; Defined at:
  1355 ;;		line 96 in file "lab1.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_db
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _db2
  1384  065A                     _db2:	
  1385  065A                     l880:	
  1386                           ;incstack = 0
  1387                           ; Regs used in _db2: [wreg+status,2+status,0]
  1388                           
  1389                           
  1390                           ;lab1.c: 97:     while (n == 1){
  1391  065A  2E6C               	goto	l888
  1392  065B                     l79:	
  1393                           
  1394                           ;lab1.c: 98:         if (PORTDbits.RD7 == 0){
  1395  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1396  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1397  065D  1B88               	btfsc	8,7	;volatile
  1398  065E  2E60               	goto	u251
  1399  065F  2E61               	goto	u250
  1400  0660                     u251:	
  1401  0660  2E66               	goto	l884
  1402  0661                     u250:	
  1403  0661                     l882:	
  1404                           
  1405                           ;lab1.c: 99:             n = 1;
  1406  0661  3001               	movlw	1
  1407  0662  00F2               	movwf	_n
  1408  0663  3000               	movlw	0
  1409  0664  00F3               	movwf	_n+1
  1410                           
  1411                           ;lab1.c: 100:         }
  1412  0665  2E6C               	goto	l888
  1413  0666                     l884:	
  1414                           
  1415                           ;lab1.c: 102:             n = 0;
  1416  0666  01F2               	clrf	_n
  1417  0667  01F3               	clrf	_n+1
  1418  0668                     l886:	
  1419                           
  1420                           ;lab1.c: 103:             jg = 1;
  1421  0668  3001               	movlw	1
  1422  0669  00F0               	movwf	_jg
  1423  066A  3000               	movlw	0
  1424  066B  00F1               	movwf	_jg+1
  1425  066C                     l888:	
  1426                           
  1427                           ;lab1.c: 97:     while (n == 1){
  1428  066C  0372               	decf	_n,w
  1429  066D  0473               	iorwf	_n+1,w
  1430  066E  1903               	btfsc	3,2
  1431  066F  2E71               	goto	u261
  1432  0670  2E72               	goto	u260
  1433  0671                     u261:	
  1434  0671  2E5B               	goto	l79
  1435  0672                     u260:	
  1436  0672                     l83:	
  1437  0672  0008               	return
  1438  0673                     __end_of_db2:	
  1439                           
  1440                           	psect	text11
  1441  0744                     __ptext11:	
  1442 ;; *************** function _carrera *****************
  1443 ;; Defined at:
  1444 ;;		line 51 in file "lab1.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    1
  1465 ;; This function calls:
  1466 ;;		_delay_ms
  1467 ;; This function is called by:
  1468 ;;		_db
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _carrera
  1474  0744                     _carrera:	
  1475  0744                     l944:	
  1476                           ;incstack = 0
  1477                           ; Regs used in _carrera: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1478                           
  1479                           
  1480                           ;lab1.c: 52:     PORTDbits.RD3 = 1;
  1481  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0746  1588               	bsf	8,3	;volatile
  1484                           
  1485                           ;lab1.c: 53:     PORTDbits.RD2 = 1;
  1486  0747  1508               	bsf	8,2	;volatile
  1487                           
  1488                           ;lab1.c: 54:     PORTDbits.RD1 = 1;
  1489  0748  1488               	bsf	8,1	;volatile
  1490  0749                     l946:	
  1491                           
  1492                           ;lab1.c: 55:     PORTC = 0xB6;
  1493  0749  30B6               	movlw	182
  1494  074A  0087               	movwf	7	;volatile
  1495  074B                     l948:	
  1496                           
  1497                           ;lab1.c: 56:     delay_ms(500);
  1498  074B  30F4               	movlw	244
  1499  074C  00F6               	movwf	delay_ms@dms
  1500  074D  3001               	movlw	1
  1501  074E  00F7               	movwf	delay_ms@dms+1
  1502  074F  120A  118A  26B5  120A  118A  	fcall	_delay_ms
  1503  0754                     l950:	
  1504                           
  1505                           ;lab1.c: 58:     PORTDbits.RD3 = 0;
  1506  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1507  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1508  0756  1188               	bcf	8,3	;volatile
  1509  0757                     l952:	
  1510                           
  1511                           ;lab1.c: 59:     PORTDbits.RD2 = 1;
  1512  0757  1508               	bsf	8,2	;volatile
  1513  0758                     l954:	
  1514                           
  1515                           ;lab1.c: 60:     PORTDbits.RD1 = 1;
  1516  0758  1488               	bsf	8,1	;volatile
  1517  0759                     l956:	
  1518                           
  1519                           ;lab1.c: 61:     PORTC = 0xB3;
  1520  0759  30B3               	movlw	179
  1521  075A  0087               	movwf	7	;volatile
  1522                           
  1523                           ;lab1.c: 62:     delay_ms(500);
  1524  075B  30F4               	movlw	244
  1525  075C  00F6               	movwf	delay_ms@dms
  1526  075D  3001               	movlw	1
  1527  075E  00F7               	movwf	delay_ms@dms+1
  1528  075F  120A  118A  26B5  120A  118A  	fcall	_delay_ms
  1529  0764                     l958:	
  1530                           
  1531                           ;lab1.c: 64:     PORTDbits.RD3 = 0;
  1532  0764  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0765  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0766  1188               	bcf	8,3	;volatile
  1535  0767                     l960:	
  1536                           
  1537                           ;lab1.c: 65:     PORTDbits.RD2 = 0;
  1538  0767  1108               	bcf	8,2	;volatile
  1539  0768                     l962:	
  1540                           
  1541                           ;lab1.c: 66:     PORTDbits.RD1 = 1;
  1542  0768  1488               	bsf	8,1	;volatile
  1543  0769                     l964:	
  1544                           
  1545                           ;lab1.c: 67:     PORTC = 0x04;
  1546  0769  3004               	movlw	4
  1547  076A  0087               	movwf	7	;volatile
  1548  076B                     l966:	
  1549                           
  1550                           ;lab1.c: 68:     delay_ms(500);
  1551  076B  30F4               	movlw	244
  1552  076C  00F6               	movwf	delay_ms@dms
  1553  076D  3001               	movlw	1
  1554  076E  00F7               	movwf	delay_ms@dms+1
  1555  076F  120A  118A  26B5  120A  118A  	fcall	_delay_ms
  1556  0774                     l968:	
  1557                           
  1558                           ;lab1.c: 70:     PORTDbits.RD3 = 0;
  1559  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0776  1188               	bcf	8,3	;volatile
  1562  0777                     l970:	
  1563                           
  1564                           ;lab1.c: 71:     PORTDbits.RD2 = 0;
  1565  0777  1108               	bcf	8,2	;volatile
  1566  0778                     l972:	
  1567                           
  1568                           ;lab1.c: 72:     PORTDbits.RD1 = 0;
  1569  0778  1088               	bcf	8,1	;volatile
  1570                           
  1571                           ;lab1.c: 73:     PORTC = 0x77;
  1572  0779  3077               	movlw	119
  1573  077A  0087               	movwf	7	;volatile
  1574  077B                     l59:	
  1575  077B  0008               	return
  1576  077C                     __end_of_carrera:	
  1577                           
  1578                           	psect	text12
  1579  06B5                     __ptext12:	
  1580 ;; *************** function _delay_ms *****************
  1581 ;; Defined at:
  1582 ;;		line 76 in file "lab1.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  dms             2    0[COMMON] unsigned int 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  j               2    4[COMMON] int 
  1587 ;;  i               2    2[COMMON] int 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, btemp+1
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         2       0       0       0       0
  1598 ;;      Locals:         4       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0
  1600 ;;      Totals:         6       0       0       0       0
  1601 ;;Total ram usage:        6 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_carrera
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _delay_ms
  1612  06B5                     _delay_ms:	
  1613  06B5                     l930:	
  1614                           ;incstack = 0
  1615                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
  1616                           
  1617                           
  1618                           ;lab1.c: 77:     for(int i = 0; i<dms; i++){
  1619  06B5  01F8               	clrf	delay_ms@i
  1620  06B6  01F9               	clrf	delay_ms@i+1
  1621  06B7  2ED3               	goto	l62
  1622  06B8                     l932:	
  1623                           
  1624                           ;lab1.c: 78:         for(int j = 0; j<255; j++);
  1625  06B8  01FA               	clrf	delay_ms@j
  1626  06B9  01FB               	clrf	delay_ms@j+1
  1627  06BA                     l938:	
  1628  06BA  3001               	movlw	1
  1629  06BB  07FA               	addwf	delay_ms@j,f
  1630  06BC  1803               	skipnc
  1631  06BD  0AFB               	incf	delay_ms@j+1,f
  1632  06BE  3000               	movlw	0
  1633  06BF  07FB               	addwf	delay_ms@j+1,f
  1634  06C0                     l940:	
  1635  06C0  087B               	movf	delay_ms@j+1,w
  1636  06C1  3A80               	xorlw	128
  1637  06C2  00FF               	movwf	btemp+1
  1638  06C3  3080               	movlw	128
  1639  06C4  027F               	subwf	btemp+1,w
  1640  06C5  1D03               	skipz
  1641  06C6  2EC9               	goto	u325
  1642  06C7  30FF               	movlw	255
  1643  06C8  027A               	subwf	delay_ms@j,w
  1644  06C9                     u325:	
  1645  06C9  1C03               	skipc
  1646  06CA  2ECC               	goto	u321
  1647  06CB  2ECD               	goto	u320
  1648  06CC                     u321:	
  1649  06CC  2EBA               	goto	l938
  1650  06CD                     u320:	
  1651  06CD                     l942:	
  1652                           
  1653                           ;lab1.c: 79:     }
  1654  06CD  3001               	movlw	1
  1655  06CE  07F8               	addwf	delay_ms@i,f
  1656  06CF  1803               	skipnc
  1657  06D0  0AF9               	incf	delay_ms@i+1,f
  1658  06D1  3000               	movlw	0
  1659  06D2  07F9               	addwf	delay_ms@i+1,f
  1660  06D3                     l62:	
  1661  06D3  0877               	movf	delay_ms@dms+1,w
  1662  06D4  0279               	subwf	delay_ms@i+1,w
  1663  06D5  1D03               	skipz
  1664  06D6  2ED9               	goto	u335
  1665  06D7  0876               	movf	delay_ms@dms,w
  1666  06D8  0278               	subwf	delay_ms@i,w
  1667  06D9                     u335:	
  1668  06D9  1C03               	skipc
  1669  06DA  2EDC               	goto	u331
  1670  06DB  2EDD               	goto	u330
  1671  06DC                     u331:	
  1672  06DC  2EB8               	goto	l932
  1673  06DD                     u330:	
  1674  06DD                     l67:	
  1675  06DD  0008               	return
  1676  06DE                     __end_of_delay_ms:	
  1677  007E                     btemp	set	126	;btemp
  1678  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _mario->_MR
    _mario->_MV
    _MV->_MRS
    _MR->_MVS
    _carrera->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     320
                                 _db
                                _set
 ---------------------------------------------------------------------------------
 (1) _set                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _db                                                   0     0      0     320
                            _carrera
                                _db2
                              _mario
 ---------------------------------------------------------------------------------
 (2) _mario                                                0     0      0       0
                                 _MR
                                 _MV
 ---------------------------------------------------------------------------------
 (3) _MV                                                   2     2      0       0
                                              2 COMMON     2     2      0
                                _MRS
                            _winner2
 ---------------------------------------------------------------------------------
 (4) _MRS                                                  2     2      0       0
                                              0 COMMON     2     2      0
                            _winner1
 ---------------------------------------------------------------------------------
 (3) _MR                                                   2     2      0       0
                                              2 COMMON     2     2      0
                                _MVS
                            _winner1
 ---------------------------------------------------------------------------------
 (5) _winner1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MVS                                                  2     2      0       0
                                              0 COMMON     2     2      0
                            _winner2
 ---------------------------------------------------------------------------------
 (4) _winner2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _db2                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _carrera                                              0     0      0     320
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             6     4      2     320
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _db
     _carrera
       _delay_ms
     _db2
     _mario
       _MR
         _MVS
           _winner2
         _winner1
       _MV
         _MRS
           _winner1
         _winner2
   _set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jan 29 16:35:18 2020

                      _n 0072              __CFG_CP$OFF 0000                       l62 06D3  
                     l71 0692                       l90 0674                       l67 06DD  
                     l59 077B                       l83 0672                       l91 0680  
                     l75 06B4                       l86 0659                       l79 065B  
                     l95 0690                       l99 07AF                       u10 06E4  
                     u11 06E3                       u20 06E9                       _MR 077C  
                     u21 06E8                       u30 06F5                       u31 06F4  
                     u40 06FB                       _MV 07B9                       u41 06FA  
                     u50 070A                       u51 0709                       u60 0717  
                     u61 0716                       u70 071C                       u71 071B  
                     u80 0728                       u81 0727                       u90 072E  
                     u91 072D                       _db 0691                       _jg 0070  
                    ?_MR 0076                      ?_MV 0076                      ?_db 0076  
                    l101 07AE                      l112 07EC                      l114 07EB  
                    l122 07F5                      l132 0710                      l109 07B8  
                    l142 0743                      l127 0710                      l145 0638  
                    l137 0743                      l148 062F                      l810 0787  
                    l740 0630                      l820 079F                      l812 0789  
                    l900 0650                      l750 062D                      l742 0635  
                    l822 07A2                      l814 078E                      l806 077C  
                    l830 07BF                      l902 0652                      l760 06F0  
                    l752 06DE                      l744 0636                      l824 07A8  
                    l816 0793                      l808 0782                      l840 07D6  
                    l832 07C4                      l904 0655                      l930 06B5  
                    l746 0627                      l770 070A                      l762 06F5  
                    l754 06E4                      l826 07B3                      l818 0799  
                    l842 07DC                      l834 07C6                      l906 0656  
                    l940 06C0                      l932 06B8                      l748 062C  
                    l764 06FB                      l756 06E9                      l780 0723  
                    l772 0711                      l844 07DF                      l836 07CB  
                    l828 07B9                      l908 0657                      l942 06CD  
                    l950 0754                      l766 0701                      l758 06EB  
                    l790 073D                      l782 0728                      l774 0717  
                    l846 07E5                      l838 07D0                      l960 0767  
                    l952 0757                      l944 0744                      l880 065A  
                    l768 0704                      l784 072E                      l776 071C  
                    l848 07F0                      l938 06BA                      l970 0777  
                    l962 0768                      l954 0758                      l946 0749  
                    l882 0661                      l786 0734                      l778 071E  
                    l890 0673                      l972 0778                      l964 0769  
                    l956 0759                      l948 074B                      l884 0666  
                    l788 0737                      l892 067A                      l980 069F  
                    l966 076B                      l958 0764                      l886 0668  
                    l894 0684                      l982 06A5                      l974 0691  
                    l990 063E                      l968 0774                      l888 066C  
                    l896 068A                      l984 06AA                      l976 0698  
                    l986 06AF                      l978 069B                      l898 0647  
                    l988 0639                      u100 073D                      u101 073C  
                    u200 07C4                      u201 07C3                      u130 0782  
                    u210 07D0                      u131 0781                      u211 07CF  
                    u140 0787                      u220 07D6                      u141 0786  
                    u221 07D5                      u150 0793                      u230 07E5  
                    u151 0792                      u231 07E4                      u320 06CD  
                    u160 0799                      u240 07F0                      u321 06CC  
                    u161 0798                      u241 07EF                      u330 06DD  
                    u250 0661                      u170 07A8                      u331 06DC  
                    u251 0660                      u171 07A7                      u260 0672  
                    u180 07B3                      u340 0698                      u325 06C9  
                    u261 0671                      u181 07B2                      u341 0697  
                    u190 07BF                      u270 067A                      u350 06A5  
                    u335 06D9                      u191 07BE                      u271 0679  
                    u351 06A4                      u280 0684                      u281 0683  
                    u290 0690             __CFG_CPD$OFF 0000                      u291 068F  
                    _MRS 0711                      _MVS 06DE                      _db2 065A  
                    _set 0647             __CFG_FOSC$XT 0000                     ??_MR 0078  
                   ??_MV 0078                     ??_db 007C             __CFG_LVP$OFF 0000  
                   ?_MRS 0076                     ?_MVS 0076                     ?_db2 0076  
                   ?_set 0076             __CFG_WRT$OFF 0000                     _main 0639  
                   btemp 007E                     start 0000            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ??_MRS 0076                    ??_MVS 0076  
                  ??_db2 0076                    ??_set 0076                    ?_main 0076  
          __CFG_WDTE$OFF 0000                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_carrera 077C           __CFG_FCMEN$OFF 0000                    _mario 0673  
         __CFG_BOREN$OFF 0000          __end_of_winner1 0639          __end_of_winner2 0630  
                  status 0003                    wtemp0 007E          __initialization 07F6  
           __end_of_main 0647                   ??_main 007C                   ?_mario 0076  
                 _ANSELH 0189         __end_of_delay_ms 06DE           __CFG_PWRTE$OFF 0000  
                 _racer1 0075                   _racer2 0074                ??_carrera 007C  
              ??_winner1 0076                ??_winner2 0076  __end_of__initialization 07FC  
         __pcstackCOMMON 0076            __end_of_mario 0691               __end_of_MR 07B9  
             __end_of_MV 07F6               __end_of_db 06B5                  ??_mario 007A  
             __pmaintext 0639                ?_delay_ms 0076                  _carrera 0744  
                __ptext1 0647                  __ptext2 0691                  __ptext3 0673  
                __ptext4 07B9                  __ptext5 0711                  __ptext6 077C  
                __ptext7 0630                  __ptext8 06DE                  __ptext9 0627  
           __size_of_MRS 0033             __size_of_MVS 0033             __size_of_db2 0019  
           __size_of_set 0013               ??_delay_ms 0078                  _winner1 0630  
                _winner2 0627     end_of_initialization 07FC                _PORTDbits 0008  
    start_initialization 07F6              __end_of_MRS 0744              __end_of_MVS 0711  
            __end_of_db2 0673              __end_of_set 065A              __pbssCOMMON 0070  
              ___latbits 0002        __size_of_delay_ms 0029                 ?_carrera 0076  
               ?_winner1 0076                 ?_winner2 0076           __size_of_mario 001E  
            __size_of_MR 003D              __size_of_MV 003D              __size_of_db 0024  
              delay_ms@i 0078                delay_ms@j 007A         __size_of_carrera 0038  
               _delay_ms 06B5                 __ptext10 065A                 __ptext11 0744  
               __ptext12 06B5        __CFG_BOR4V$BOR40V 0000         __size_of_winner1 0009  
       __size_of_winner2 0009            __size_of_main 000E              delay_ms@dms 0076  
